CONFLICT.catalogueIdAlreadyExists=Catalogue with ID: {0} already exists for the publishing party
CONFLICT.unitListExists=Unit list with id {0} already exists
CONFLICT.unitExists=Unit {0} already exists for unit list with id: {1}
NOT_FOUND.order=The order with id: {0} does not exist
NOT_FOUND.noClass=There does not exist a class for the given class name: {0}
NOT_FOUND.noProcessInstanceGroup=There does not exist a process instance group with id: {0}
NOT_FOUND.noProduct=There does not exist a product for the given id: {0}
NOT_FOUND.noProcessInstance=There does not exist a process instance with id: {0}
NOT_FOUND.noCollaborationGroupForProcess=No CollaborationGroup for the process instance id: {0}
NOT_FOUND.noDefaultCatalogue=No default catalogue for party: {0}
NOT_FOUND.noBinaryContent=There does not exist a binary content for uri: {0}
NOT_FOUND.noCategory=There does not exist a category with the id : {0}
NOT_FOUND.noCatalogueLineWithId=There does not exist a catalogue line with lineId {0}
NOT_FOUND.noCatalogueLineForHjid=No CatalogueLine found for the specified hjid: {0}
NOT_FOUND.noMetadataForOrderResponse=No metadata exists for the order response: {0}
NOT_FOUND.noProcessId=No process ID exists for the process id: {0}
NOT_FOUND.noDocument=No document for id: {0}
NOT_FOUND.noProcessDocumentMetadata=There does not exist a process document metadata for : {0}
NOT_FOUND.noCollaborationGroup=CollaborationGroup with id {0} does not exist
NOT_FOUND.invalidProcessInstance=Invalid process instance id: {0}
NOT_FOUND.noContract=No contract for the given id: {0}
NOT_FOUND.invalidBoundedDocumentType=Invalid bounded-document type: {0}
NOT_FOUND.noCatalogueForParty=No catalogue for party: {0}, catalogue: {1}
NOT_FOUND.noUnitList=No unit list with id: {0}
NOT_FOUND.noUnit="Unit {0} does not exist for unit list with id: {1}
NOT_FOUND.noCatalogue=Catalogue with uuid : {0} does not exist
NOT_FOUND.noCatalogueLine=Catalogue line does not exist. catalogueId: {0}, lineId: {1}
NOT_FOUND.noPriceOption=No option exists. catalogueId: {0}, lineId: {1}, optionId: {2}
NOT_FOUND.noDigitalAgreement=No DigitalAgreement found. hjid: {0}
NOT_FOUND.noDigitalAgreementForParameters=No DigitalAgreement found. seller id: {0}, buyer id: {1}, product hjids: {2}
NOT_FOUND.noContractForDocumentType=No contract available for the specified document type: {0}
NO_CONTENT.noClause=No clause for the document: {0}, clause type: {1}
BAD_REQUEST.paymentDone=The payment is already done for the order: {0}
BAD_REQUEST.noQualifyingParty=No qualifying party exists for the given party id: {0}
BAD_REQUEST.noProcessDocumentMetadata=No process document metadata for the given process instance id: {0}
BAD_REQUEST.noParty=No party exists for the given party id: {0}
BAD_REQUEST.partyNotIncludedInProcess=Party: {0} is not included in the process instance: {1}
BAD_REQUEST.missingRatingParameter=One of the ratings or reviews parameters must be given for party: {0}, process instance: {1}
BAD_REQUEST.noCompletedTask=No completed task exists for the given party id: {0} and process instance id: {1}
BAD_REQUEST.invalidRole=Invalid role: {0}
BAD_REQUEST.invalidBusinessProcessType=Invalid business process type: {0}
BAD_REQUEST.invalidDocumentType=Invalid document type: {0}
BAD_REQUEST.invalidDate=Invalid date: {0}
BAD_REQUEST.invalidStatus=Invalid status: {0}
BAD_REQUEST.notUsedInAnyOrder=The epc: {0} is not used in any orders.
BAD_REQUEST.noIdForLine=No id set for catalogue line.
BAD_REQUEST.invalidReference=Catalogue uuid and catalogue document reference id do not match for catalogue line: {0}
BAD_REQUEST.noManufacturerParty=No manufacturer party id set for catalogue line: {0}
BAD_REQUEST.idsDoNotMatch=Catalogue line id and manufacturer id do not match. line id: {0}, manufacturer id: {1}
BAD_REQUEST.noNameForLine=No name set for catalogue line. id: {0}
BAD_REQUEST.noCommodityClassification=No commodity classification is set for catalogue line. id: {0}
BAD_REQUEST.partyIdsDoNotMatch=Catalogue provider party and manufacturer party ids do no match for catalogue line. id: {0}, catalogue provider party id: {1}, line manufacturer party id: {2}
BAD_REQUEST.largerThanAllowedSize={0} is larger than the allowed size: {1}
BAD_REQUEST.noBinaryContentForTheFile={0} does not have any content
BAD_REQUEST.noIdForCatalogue=No ID set for the catalogue
BAD_REQUEST.missingPartyParameters=Both party and federation id should be provided
BAD_REQUEST.hjidFieldsFound=Entity IDs (hjid fields) found in the passed document. document type: {0}, content: {1}
BAD_REQUEST.notIncludedInWorkflow={0} is not included in the workflow of {1}
BAD_REQUEST.samePartiesToStartProcess=Initiator and responder party IDs are the same for the process : {0}
BAD_REQUEST.parseCatalogue=Failed to parse catalogue
BAD_REQUEST.getZipPackage=Failed obtain a Zip package from the provided data
BAD_REQUEST.uploadImages=Failed to upload images
BAD_REQUEST.getCatalogueLines=Number of elements in catalogue uuids list and line ids list does not match
BAD_REQUEST.noUpdateOperationForStandard=Update operation is not support for {0}
BAD_REQUEST.invalidHjidsInLine=Some of the identifiers (hjid fields) do not belong to the party in the passed catalogue line: {0}
BAD_REQUEST.deserializeCatalogueLine=Failed to deserialize catalogue line {0}
BAD_REQUEST.parseLCPAOutput=Could not parse LCPAOutput for catalogue line with hjid: {0}. LCPAOutput: {1}
BAD_REQUEST.hjids=Entity IDs (hjid fields) found in the passed catalogue line: {0}. Make sure they are null
BAD_REQUEST.invalidHjids=Some of the identifiers (hjid fields) do not belong to the party in the passed catalogue: {0}
BAD_REQUEST.invalidParametersToGetCategories=Number of elements in taxonomy ids list and category ids list does not match
BAD_REQUEST.invalidTaxonomy=The given taxonomy id : {0} is not valid
BAD_REQUEST.noValidReference=Each response document should have a valid reference to the request document
BAD_REQUEST.missingParameters=Both language id and search text should be provided
BAD_REQUEST.alreadyFinished=Collaboration represented by the process instance group with id: {0} is already finished
BAD_REQUEST.missingParametersToGetCategories=taxonomy id - category id pairs should be provided
BAD_REQUEST.noProduct=There is no product for the given id: {0}
BAD_REQUEST.invalidIdentifiers=Some of the identifiers (hjid fields) do not belong to the party in the passed catalogue: {0}
BAD_REQUEST.alreadyCancelled=The process instance group with the id: {0} is already cancelled
BAD_REQUEST.alreadyCompleted=Process instance group with id: {0} can not be cancelled since it's already completed.
BAD_REQUEST.invalidStandard=Invalid standard: {0}
BAD_REQUEST.deserializeCatalogue=Failed to deserialize catalogue: {0}
BAD_REQUEST.hjidsInPriceOption=Entity IDs (hjid fields) found in the passed price option: {0}. Make sure they are null
UNAUTHORIZED.invalidRole=Invalid role
UNAUTHORIZED.noUserForToken=No user exists for the given token : {0}
UNAUTHORIZED.failedToCreateShoppingCart=Failed to create shopping cart instance
NOT_ACCEPTABLE.notArchivable=CollaborationGroup with id {0} is not archivable
NOT_ACCEPTABLE.alreadyExists=There already exists a product with the given id
PRECONDITION_FAILED.noShoppingCart=There is no shopping cart for the user: {0}
INTERNAL_SERVER_ERROR.cancelProcess=Failed to cancel the process instance with id {0}
INTERNAL_SERVER_ERROR.createRatingAndReview=Failed to create rating and reviews for the party with id: {0} and process instance with id: {1}
INTERNAL_SERVER_ERROR.listAllIndividualRatingsAndReviews=Unexpected error while getting negotiation ratings and reviews for the party: {0}
INTERNAL_SERVER_ERROR.failedToCheckToken=Failed to check user authorization for token: {0}
INTERNAL_SERVER_ERROR.failedToRetrieveEPC=Failed to retrieve epc codes for code: {0}
INTERNAL_SERVER_ERROR.addProductToShoppingCart=Unexpected error while adding product: {0} to the cart
INTERNAL_SERVER_ERROR.removeProductsFromShoppingCart=Unexpected error while removing products: {0} from the cart
INTERNAL_SERVER_ERROR.failedToExtractPartyInfo=Failed to extract party info from token: {0}
INTERNAL_SERVER_ERROR.getExpectedOrders=Unexpected error while getting the expected orders
INTERNAL_SERVER_ERROR.sendPaymentLog=Failed send payment log to url {0} for order {1}
INTERNAL_SERVER_ERROR.getCatalogueLineForEPCCode=Unexpected error while getting CatalogueLine for the epc: {0}
INTERNAL_SERVER_ERROR.getProcessCount=Unexpected error while getting the total number for business process type: {0}, start date: {1}, end date: {2}, partyId id: {3}, role: {4}, state: {5}
INTERNAL_SERVER_ERROR.getProcessCountBreakDown=Unexpected error while getting the total number for start date: {0}, end date: {1}, party id: {2}, role: {3}
INTERNAL_SERVER_ERROR.getNonOrderedProducts=Unexpected error while getting the non-ordered products for party id: {0}
INTERNAL_SERVER_ERROR.getTradingVolume=Unexpected error while getting the trading volume for start date: {0}, end date: {1}, party id: {2}, role: {3}, state: {4}
INTERNAL_SERVER_ERROR.getInactiveCompanies=Unexpected error while getting the inactive companies
INTERNAL_SERVER_ERROR.getAverageResponseTime=Unexpected error while getting average response time for the party with id: {0}
INTERNAL_SERVER_ERROR.getStatistics=Unexpected error while getting statistics for the party with id: {0}
INTERNAL_SERVER_ERROR.getFulfilmentStatistics=Unexpected error while getting fulfilment statistics for the order with id: {0}
INTERNAL_SERVER_ERROR.getClauseDetails=Unexpected error while getting the clause details for document id: {0}, clause type: {1}
INTERNAL_SERVER_ERROR.failedToAddClause=Failed to add document clause to contract. Bounded-document id: {0}, clause document id: {1}
INTERNAL_SERVER_ERROR.addDocumentClauseToContract=Unexpected error while adding clause to contract. Bounded-document id: {0} , clause document id: {1}
INTERNAL_SERVER_ERROR.failedToAddDataMonitoringClauseToContract=Failed to add monitoring clause to contract. Bounded-document id: {0}
INTERNAL_SERVER_ERROR.addDataMonitoringClauseToContract=Unexpected error while adding data monitoring clause to contract. Bounded-document id: {0}
INTERNAL_SERVER_ERROR.getDigitalAgreementForPartiesAndProducts=Unexpected error while getting DigitalAgreement. seller id: {0}, buyer id: {1}, product hjids: {2}
INTERNAL_SERVER_ERROR.getAllDigitalAgreementsForPartiesAndProduct=Unexpected error while getting all DigitalAgreements for party: {0}
INTERNAL_SERVER_ERROR.failedToGetPerson=Failed to get person
INTERNAL_SERVER_ERROR.failedToDeserializeDocument=Failed to deserialize document
INTERNAL_SERVER_ERROR.failedToCreateProcessInstanceInputMessage=Failed to create process instance input message for the document
INTERNAL_SERVER_ERROR.failedToGetGroupIdTuple=Failed to get group id tuple for document  : {0}
INTERNAL_SERVER_ERROR.startProcessWithDocument=Failed to start process for the given document
INTERNAL_SERVER_ERROR.getAssociatedCollaborationGroup=Unexpected error while getting associated collaboration group for process instance id: {0}
INTERNAL_SERVER_ERROR.failedToWriteTransactionSummary=Failed to write the transaction summary to the zip file for party id: {0}, user id: {1}, direction: {2}
INTERNAL_SERVER_ERROR.failedToWriteDocumentToZip=Failed to write document: {0} to the zip file for party id: {1}, user id: {2}, direction: {3}
INTERNAL_SERVER_ERROR.failedToWriteAuxiliaryFileToZip=Failed to write auxiliary file: {0} to the zip file for party id: {1}, user id: {2}, direction: {3}
INTERNAL_SERVER_ERROR.exportTransactions=Unexpected error while exporting transactions for party id: {0}, user id: {1}, direction: {2}
INTERNAL_SERVER_ERROR.updateInstance=Failed to update the process instance with id: {0}
INTERNAL_SERVER_ERROR.isRated=Unexpected error while getting rating status for process instance id: {0}, party: {1}
INTERNAL_SERVER_ERROR.getProcessInstanceIdForDocument=Unexpected error while getting process instance id for document: {0}
INTERNAL_SERVER_ERROR.getDashboardProcessInstanceDetails=Unexpected error while getting the details for process instance id: {0}
INTERNAL_SERVER_ERROR.getBinaryContent=Unexpected error while getting the binary content for uri: {0}
INTERNAL_SERVER_ERROR.getBinaryContents=Unexpected error while getting the binary content for uris: {0}
INTERNAL_SERVER_ERROR.writeBinaryContentToOutputStream=Failed to write the raw binary content to the response output stream for uri: {0}
INTERNAL_SERVER_ERROR.getBase64BinaryContent=Unexpected error while retrieving the raw content for uri: {0}
INTERNAL_SERVER_ERROR.importCatalogue=Failed to import catalogue: {0}
INTERNAL_SERVER_ERROR.failedToGetCatalogue=Failed to get catalogue for uuid: {0}
INTERNAL_SERVER_ERROR.writeCatalogueContentToOutputStream=Failed to write the catalogue content to the response output stream
INTERNAL_SERVER_ERROR.exportCatalogue=Unexpected error while exporting catalogues for party: {0} ids: {1}, delete all: {2}
INTERNAL_SERVER_ERROR.downloadBOMTemplate=Failed to download BOM template
INTERNAL_SERVER_ERROR.getCatalogueLine=Failed to get catalogue line
INTERNAL_SERVER_ERROR.getCatalogueLines=Failed to get catalogue lines
INTERNAL_SERVER_ERROR.getCollaborationGroups=Unexpected error while getting CollaborationGroups for party: {0}
INTERNAL_SERVER_ERROR.getFederatedMetadata=Failed to read Federated Collaboration Group Metadata: {0}
INTERNAL_SERVER_ERROR.unmergeGroups=Failed to unmerge group
INTERNAL_SERVER_ERROR.failedToDeserializeFederatedMetadata=Failed to deserialize federatedCollaborationGroupMetadata
INTERNAL_SERVER_ERROR.completeProcess=Failed to complete process for the given document
INTERNAL_SERVER_ERROR.failedToSendDocumentToInitiatorParty=Failed to send the document to the initiator party {0}, endpoint: {1} : {2}
INTERNAL_SERVER_ERROR.failedToSerializeRFQSummary=Unexpected error while serializing the RFQSummary
INTERNAL_SERVER_ERROR.getNegotiationSettings=Unexpected error while getting negotiation settings for the party: {0}
INTERNAL_SERVER_ERROR.createRfq=Unexpected error while creating request for quotation for product: {0}
INTERNAL_SERVER_ERROR.serializeRFQ=Unexpected error while serializing the request for quotation
INTERNAL_SERVER_ERROR.createOrder=Unexpected error while creating order for product: {0}
INTERNAL_SERVER_ERROR.serializeOrder=Unexpected error while serializing the order
INTERNAL_SERVER_ERROR.generateContract=Failed to generate contract for the order with id : {0}
INTERNAL_SERVER_ERROR.failedToGenerateOrderTerms=Failed to generate Order Terms and Conditions clauses
INTERNAL_SERVER_ERROR.uploadImages=Failed to upload images
INTERNAL_SERVER_ERROR.unExpectedErrorWhileUploadingImages=Unexpected error while uploading images. uuid: {0}
INTERNAL_SERVER_ERROR.deleteImages=Unexpected error while deleting images. uuid: {0}
INTERNAL_SERVER_ERROR.getCatalogueInSemanticFormat=Unexpected error while getting the catalogue in semantic format. uuid: {0}, content-type:{1}
INTERNAL_SERVER_ERROR.failedToGetCatalogues=Failed to get catalogues for party id: {0}
INTERNAL_SERVER_ERROR.continueProcess=$$$ Failed to continue process with ProcessInstanceInputMessage {0}
INTERNAL_SERVER_ERROR.startProcess=$$$ Failed to start process with ProcessInstanceInputMessage {0}
INTERNAL_SERVER_ERROR.createNegotiationsForBOM=Unexpected error while creating negotiations for bill of materials
INTERNAL_SERVER_ERROR.failedToGetPartyInfo=Failed to retrieve party information for : {0}
INTERNAL_SERVER_ERROR.getDigitalAgreementForPartiesAndProduct=Unexpected error while getting DigitalAgreement. hjid: {0}
INTERNAL_SERVER_ERROR.deleteDigitalAgreement=Unexpected error while deleting DigitalAgreement. hjid: {0}
INTERNAL_SERVER_ERROR.updateCatalogueLine=Failed to update the provided catalogue line
INTERNAL_SERVER_ERROR.delegateCatalogueLine=Failed to delete the catalogue line. catalogue uuid: {0} line id: {1}
INTERNAL_SERVER_ERROR.getProductAndServiceCount=Failed to get count of services and product
INTERNAL_SERVER_ERROR.indexEclassCategories=Failed to index eClass categories
INTERNAL_SERVER_ERROR.getAvailableTaxonomies=Failed to get available taxonomies
INTERNAL_SERVER_ERROR.updatePriceOption=Unexpected error while updating price option catalogueId: {0}, lineId: {1}, optionId: {2}
INTERNAL_SERVER_ERROR.getVatRates=Unexpected error while getting VAT rates
INTERNAL_SERVER_ERROR.getProductsWithoutLCPAProcessing=Unexpecteed error while getting product with LCPA input but not output
INTERNAL_SERVER_ERROR.addLCPAOutput=Unexpected error while adding LCPAOutput for catalogue line with hjid: {0}. LCPAOutput: {1}
INTERNAL_SERVER_ERROR.getCatalogueLineWithLineAndCatalogueId=Failed to get catalogue line: {0}, catalogue uuid: {1}
INTERNAL_SERVER_ERROR.getMultipleCatalogueLines=Failed to get catalogue lines: {0}, catalogue uuid: {1}
INTERNAL_SERVER_ERROR.indexEclassProperties=Failed to index eClass properties
INTERNAL_SERVER_ERROR.indexEclassResources=Failed to index eClass Resources
INTERNAL_SERVER_ERROR.updateCatalogue=Failed to update the catalogue
INTERNAL_SERVER_ERROR.unExpectedErrorWhileUpdatingCatalogue=Unexpected error while updating the catalogue: {0}
INTERNAL_SERVER_ERROR.deleteCatalogue=Failed to delete catalogue
INTERNAL_SERVER_ERROR.deleteCatalogues=Unexpected error while deleting catalogues for party: {0} ids: {1}, delete all: {2}
INTERNAL_SERVER_ERROR.generateTemplate=Failed to generate template
INTERNAL_SERVER_ERROR.writeTemplateContentToOutputStream=Failed to write the template content to the response output stream
INTERNAL_SERVER_ERROR.addCatalogue=Unexpected error while adding the catalogue: {0}
INTERNAL_SERVER_ERROR.generateUriForItem=Failed to generate a URI for the newly created item
INTERNAL_SERVER_ERROR.getStandards=Failed to get supported standards
INTERNAL_SERVER_ERROR.addCatalogueLine=Failed to add the provided catalogue line
INTERNAL_SERVER_ERROR.addPriceOption=Failed to add pricing option for catalogueId: {0}, lineId: {1}, pricingOption: {2}
INTERNAL_SERVER_ERROR.failedToGetCatalogueForStandard=Failed to get catalogue for standard: {0} uuid: {1}
INTERNAL_SERVER_ERROR.cancelCollaboration=Unexpected error while cancelling the group: {0}
INTERNAL_SERVER_ERROR.archiveCollaborationGroup=Unexpected error while archiving CollaborationGroup with id: {0}
INTERNAL_SERVER_ERROR.getCollaborationGroup=Failed to get collaboration group
INTERNAL_SERVER_ERROR.getProcessInstanceGroupFilters=Failed to retrieve process instance group filters
INTERNAL_SERVER_ERROR.updateDocument=Unexpected error while updating the document id: {0}, document type: {1}, document: {2}
INTERNAL_SERVER_ERROR.getClausesOfContract=Unexpected error while getting clauses for contract: {0}
INTERNAL_SERVER_ERROR.failedToMergeTransportGroupToOrderGroup=Failed to merge transport group to order group
INTERNAL_SERVER_ERROR.serializationError=Serialization error for document: {0}
INTERNAL_SERVER_ERROR.failedToGetShoppingCart=Failed to get shopping cart for the token: {0}
INTERNAL_SERVER_ERROR.failedToCreateShoppingCart=Failed to create a shopping cart for the token: {0}
INTERNAL_SERVER_ERROR.getOrderDocument=Unexpected error while getting the order content for process id: {0}
INTERNAL_SERVER_ERROR.getDocumentJsonContent=Unexpected error while getting the content for document: {0}
INTERNAL_SERVER_ERROR.getEPCCodesBelongsToProduct=Unexpected error while getting the epc codes for productId: {0}
INTERNAL_SERVER_ERROR.failedToGetParty=Failed to retrieve party for token: {0}
INTERNAL_SERVER_ERROR.finishCollaboration=Unexpected error while finishing the group: {0}
INTERNAL_SERVER_ERROR.constructContractForProcessInstances=Unexpected error while constructing contract for process: {0}
INTERNAL_SERVER_ERROR.cataloguePaginationResponse=Failed to get CataloguePaginationResponse for party id: {0} catalogue id: {1}
INTERNAL_SERVER_ERROR.deletePriceOption=Unexpected error while deleting price option catalogueId: {0}, lineId: {1}, pricingOptionId: {2}
INTERNAL_SERVER_ERROR.uploadTemplate=Unexpected error while uploading the template